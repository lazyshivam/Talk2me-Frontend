{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\Talk2Me\\\\Talk2me-Frontend\\\\src\\\\videoContext\\\\VideoState.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { io } from \"socket.io-client\";\nimport VideoContext from \"./VideoContext\";\nimport { url } from \"../config\";\nimport Peer from \"simple-peer\";\nimport userContext from \"../userContext/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoState = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  // const [peers, setPeers] = useState([]);\n  const [call, setCall] = useState({});\n  const {\n    isAuthenticated,\n    userProfile\n  } = useContext(userContext);\n  const [me, setMe] = useState(null);\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(true);\n  const [stream, setStream] = useState(null);\n  const [peerStream, setPeerStream] = useState(null);\n  const [isCallStarted, setIsCallStarted] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef(null);\n  const peerVideo = useRef(null);\n  const connectionRef = useRef(null);\n  useEffect(() => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      console.log(\"getUserMedia is not supported in this browser.\");\n      return;\n    }\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (myVideo.current) myVideo.current.srcObject = stream;\n    }).catch(error => console.error(error));\n\n    // return cleanup function to stop the stream when the component unmounts\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    // if(userProfile)\n    const Newsocket = io(url);\n    setSocket(Newsocket);\n    Newsocket.emit(\"new-user-joined\", {\n      name: userProfile.name,\n      email: userProfile.email\n    });\n    Newsocket.on(\"me\", id => setMe(id));\n    Newsocket.on(\"calluser\", ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceived: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    console.log(me);\n    return () => Newsocket.disconnect();\n    // eslint-disable-next-line\n  }, [isAuthenticated]);\n\n  //answer call of the user\n  const answerCall = () => {\n    setCallAccepted(true);\n    setIsFullScreen(false);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answercall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on(\"stream\", stream => {\n      setPeerStream(stream);\n      peerVideo.current.srcObject = stream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  //call the user\n  const callUser = id => {\n    setIsCallStarted(true);\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      console.log(data);\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      setPeerStream(stream);\n      peerVideo.current.srcObject = stream;\n    });\n    socket.on(\"callaccepted\", signal => {\n      setCallAccepted(true);\n      setIsFullScreen(false);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  //cancel the call\n  const leaveCall = () => {\n    setCallEnded(true);\n    setPeerStream(null);\n    setStream(null);\n    setIsCallStarted(false);\n    setIsFullScreen(true);\n    connectionRef.current.destroy();\n  };\n\n  //for making the camera on and off.\n  const [cameraOn, setCameraOn] = useState(true);\n  const [micOn, setMicOn] = useState(true);\n  const handleCameraToggle = () => {\n    if (stream && stream.getVideoTracks().length > 0) {\n      const videoTrack = stream.getVideoTracks()[0];\n      videoTrack.enabled = !videoTrack.enabled;\n      setCameraOn(videoTrack.enabled);\n    }\n  };\n  const handleMicToggle = () => {\n    if (stream && stream.getAudioTracks().length > 0) {\n      const audioTrack = stream.getAudioTracks()[0];\n      audioTrack.enabled = !audioTrack.enabled;\n      setMicOn(audioTrack.enabled);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n    value: {\n      cameraOn,\n      micOn,\n      handleCameraToggle,\n      handleMicToggle,\n      stream,\n      peerStream,\n      peerVideo,\n      myVideo,\n      name,\n      setName,\n      me,\n      isCallStarted,\n      callAccepted,\n      callEnded,\n      call,\n      socket,\n      leaveCall,\n      answerCall,\n      callUser,\n      isFullScreen\n    },\n    children: isAuthenticated && socket && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoState, \"FWvJVMSj3a0BilGpZ5lgWWQuwYM=\");\n_c = VideoState;\nexport default VideoState;\nvar _c;\n$RefreshReg$(_c, \"VideoState\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","io","VideoContext","url","Peer","userContext","jsxDEV","_jsxDEV","VideoState","children","_s","socket","setSocket","call","setCall","isAuthenticated","userProfile","me","setMe","callAccepted","setCallAccepted","callEnded","setCallEnded","isFullScreen","setIsFullScreen","stream","setStream","peerStream","setPeerStream","isCallStarted","setIsCallStarted","name","setName","myVideo","peerVideo","connectionRef","navigator","mediaDevices","getUserMedia","console","log","video","audio","then","current","srcObject","catch","error","getTracks","forEach","track","stop","Newsocket","emit","email","on","id","from","callerName","signal","isReceived","disconnect","answerCall","peer","initiator","trickle","data","to","callUser","userToCall","signalData","leaveCall","destroy","cameraOn","setCameraOn","micOn","setMicOn","handleCameraToggle","getVideoTracks","length","videoTrack","enabled","handleMicToggle","getAudioTracks","audioTrack","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/Talk2Me/Talk2me-Frontend/src/videoContext/VideoState.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport {io} from \"socket.io-client\";\r\nimport VideoContext from \"./VideoContext\";\r\nimport { url } from \"../config\";\r\nimport Peer from \"simple-peer\";\r\nimport userContext from \"../userContext/UserContext\";\r\n\r\nconst VideoState = ({ children }) => {\r\n  const [socket,setSocket]=useState(null);\r\n  // const [peers, setPeers] = useState([]);\r\n  const [call, setCall] = useState({});\r\n  const {isAuthenticated,userProfile}=useContext(userContext);\r\n  const [me, setMe] = useState(null);\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [isFullScreen, setIsFullScreen] = useState(true);\r\n  const [stream, setStream] = useState(null);\r\n  const [peerStream, setPeerStream] = useState(null);\r\n  const [isCallStarted, setIsCallStarted] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const myVideo = useRef(null);\r\n  const peerVideo = useRef(null);\r\n  const connectionRef = useRef(null);\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      console.log(\"getUserMedia is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        if (myVideo.current) myVideo.current.srcObject = stream;\r\n      })\r\n      .catch((error) => console.error(error));\r\n\r\n    // return cleanup function to stop the stream when the component unmounts\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    // if(userProfile)\r\n    const Newsocket = io(url);\r\n    setSocket(Newsocket);\r\n    Newsocket.emit(\"new-user-joined\", { name: userProfile.name, email: userProfile.email });\r\n  \r\n    Newsocket.on(\"me\", (id) => setMe(id));\r\n    Newsocket.on(\"calluser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceived: true, from, name: callerName, signal });\r\n    });\r\n    console.log(me)\r\n    return () => Newsocket.disconnect();\r\n    // eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n\r\n  //answer call of the user\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    setIsFullScreen(false);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answercall\", { signal: data, to: call.from });\r\n    });\r\n    peer.on(\"stream\", (stream) => {\r\n      setPeerStream(stream);\r\n      peerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  //call the user\r\n  const callUser = (id) => {\r\n    setIsCallStarted(true);\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    peer.on(\"signal\", (data) => {\r\n      console.log(data);\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name,\r\n      });\r\n    });\r\n    peer.on(\"stream\", (stream) => {\r\n      setPeerStream(stream);\r\n      peerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    socket.on(\"callaccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      setIsFullScreen(false);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n \r\n  //cancel the call\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    setPeerStream(null);\r\n    setStream(null);\r\n    setIsCallStarted(false);\r\n    setIsFullScreen(true);\r\n    connectionRef.current.destroy();\r\n  };\r\n\r\n  //for making the camera on and off.\r\n  const [cameraOn, setCameraOn] = useState(true);\r\n  const [micOn, setMicOn] = useState(true);\r\n  const handleCameraToggle = () => {\r\n    if (stream && stream.getVideoTracks().length > 0) {\r\n      const videoTrack = stream.getVideoTracks()[0];\r\n      videoTrack.enabled = !videoTrack.enabled;\r\n      setCameraOn(videoTrack.enabled);\r\n    }\r\n  };\r\n\r\n  const handleMicToggle = () => {\r\n    if (stream && stream.getAudioTracks().length > 0) {\r\n      const audioTrack = stream.getAudioTracks()[0];\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n      setMicOn(audioTrack.enabled);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VideoContext.Provider\r\n      value={{\r\n        cameraOn,\r\n        micOn,\r\n        handleCameraToggle,\r\n        handleMicToggle,\r\n        stream,\r\n        peerStream,\r\n        peerVideo,\r\n        myVideo,\r\n        name,\r\n        setName,\r\n        me,\r\n        isCallStarted,\r\n        callAccepted,\r\n        callEnded,\r\n        call,\r\n        socket,\r\n        leaveCall,\r\n        answerCall,\r\n        callUser,\r\n        isFullScreen,\r\n      }}\r\n    >\r\n      {isAuthenticated &&socket && children}\r\n    </VideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default VideoState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}