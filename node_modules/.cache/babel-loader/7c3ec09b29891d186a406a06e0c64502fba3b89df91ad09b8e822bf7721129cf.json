{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\Talk2Me\\\\Talk2me-Frontend\\\\src\\\\chatContext\\\\ChatState.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ChatContext from \"./ChatContext\";\nimport userContext from \"../userContext/UserContext\";\nimport videoContext from \"../videoContext/VideoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatState = props => {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const {\n    socket\n  } = useContext(videoContext);\n  const {\n    userProfile\n  } = useContext(userContext);\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    // Define the event listener for receiving messages\n    const handleReceiveMessage = data => {\n      setMessageList(list => [...list, data]);\n    };\n\n    // Define the event listener for user joined\n    const handleUserJoined = data => {\n      setMessageList(list => [...list, data]);\n    };\n\n    // Define the event listener for user left\n    const handleLeftJoined = data => {\n      setMessageList(list => [...list, data]);\n    };\n\n    // Add the event listener for receiving messages\n    socket.on(\"receive_message\", handleReceiveMessage);\n\n    // Add the event listener for user joined\n    socket.on(\"user_joined\", handleUserJoined);\n    socket.on(\"user_left\", handleLeftJoined);\n\n    // Clean up event listeners when the component unmounts\n    return () => {\n      socket.off(\"receive_message\", handleReceiveMessage);\n      socket.off(\"user_joined\", handleUserJoined);\n      socket.off(\"user_left\", handleLeftJoined);\n    };\n  }, [socket]);\n  const sendMessage = messageData => {\n    socket.emit(\"send_message\", messageData);\n    setMessageList(list => [...list, messageData]);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      sendMessage,\n      messageList,\n      participants\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatState, \"CwtvINMEDzCXh9KbOqJTUepvSAA=\");\n_c = ChatState;\nexport default ChatState;\nvar _c;\n$RefreshReg$(_c, \"ChatState\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ChatContext","userContext","videoContext","jsxDEV","_jsxDEV","ChatState","props","_s","messageList","setMessageList","socket","userProfile","participants","setParticipants","handleReceiveMessage","data","list","handleUserJoined","handleLeftJoined","on","off","sendMessage","messageData","emit","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/Talk2Me/Talk2me-Frontend/src/chatContext/ChatState.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport ChatContext from \"./ChatContext\";\r\nimport userContext from \"../userContext/UserContext\";\r\nimport videoContext from \"../videoContext/VideoContext\";\r\n\r\nconst ChatState = (props) => {\r\n  const [messageList, setMessageList] = useState([]);\r\n  const { socket } = useContext(videoContext);\r\n  const { userProfile } = useContext(userContext);\r\n  const [participants,setParticipants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Define the event listener for receiving messages\r\n    const handleReceiveMessage = (data) => {\r\n      setMessageList((list) => [...list, data]);\r\n    };\r\n\r\n    // Define the event listener for user joined\r\n    const handleUserJoined = (data) => {\r\n      \r\n      setMessageList((list) => [...list, data]);\r\n    };\r\n\r\n     // Define the event listener for user left\r\n    const handleLeftJoined = (data) => {\r\n      \r\n      setMessageList((list) => [...list, data]);\r\n    };\r\n\r\n    // Add the event listener for receiving messages\r\n    socket.on(\"receive_message\", handleReceiveMessage);\r\n\r\n    // Add the event listener for user joined\r\n    socket.on(\"user_joined\", handleUserJoined);\r\n    socket.on(\"user_left\", handleLeftJoined);\r\n\r\n\r\n    // Clean up event listeners when the component unmounts\r\n    return () => {\r\n      socket.off(\"receive_message\", handleReceiveMessage);\r\n      socket.off(\"user_joined\", handleUserJoined);\r\n      socket.off(\"user_left\", handleLeftJoined);\r\n    };\r\n  }, [socket]);\r\n\r\n  const sendMessage = (messageData) => {\r\n    socket.emit(\"send_message\", messageData);\r\n    setMessageList((list) => [...list, messageData]);\r\n  };\r\n  \r\n  \r\n   \r\n  return (\r\n    <ChatContext.Provider value={{ sendMessage, messageList, participants }}>\r\n      {props.children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChatState;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEa;EAAO,CAAC,GAAGX,UAAU,CAACG,YAAY,CAAC;EAC3C,MAAM;IAAES;EAAY,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAM,CAACW,YAAY,EAACC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,oBAAoB,GAAIC,IAAI,IAAK;MACrCN,cAAc,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IAC3C,CAAC;;IAED;IACA,MAAME,gBAAgB,GAAIF,IAAI,IAAK;MAEjCN,cAAc,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IAC3C,CAAC;;IAEA;IACD,MAAMG,gBAAgB,GAAIH,IAAI,IAAK;MAEjCN,cAAc,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IAC3C,CAAC;;IAED;IACAL,MAAM,CAACS,EAAE,CAAC,iBAAiB,EAAEL,oBAAoB,CAAC;;IAElD;IACAJ,MAAM,CAACS,EAAE,CAAC,aAAa,EAAEF,gBAAgB,CAAC;IAC1CP,MAAM,CAACS,EAAE,CAAC,WAAW,EAAED,gBAAgB,CAAC;;IAGxC;IACA,OAAO,MAAM;MACXR,MAAM,CAACU,GAAG,CAAC,iBAAiB,EAAEN,oBAAoB,CAAC;MACnDJ,MAAM,CAACU,GAAG,CAAC,aAAa,EAAEH,gBAAgB,CAAC;MAC3CP,MAAM,CAACU,GAAG,CAAC,WAAW,EAAEF,gBAAgB,CAAC;IAC3C,CAAC;EACH,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMW,WAAW,GAAIC,WAAW,IAAK;IACnCZ,MAAM,CAACa,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;IACxCb,cAAc,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEM,WAAW,CAAC,CAAC;EAClD,CAAC;EAID,oBACElB,OAAA,CAACJ,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEJ,WAAW;MAAEb,WAAW;MAAEI;IAAa,CAAE;IAAAc,QAAA,EACrEpB,KAAK,CAACoB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACvB,EAAA,CApDIF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}